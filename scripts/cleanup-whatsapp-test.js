const fs = require('fs');
const path = require('path');

console.log('üßπ Nettoyage des fichiers de test WhatsApp...\n');

// Fichiers √† supprimer apr√®s test
const filesToRemove = [
  'src/components/WhatsAppTest.jsx',
  'src/components/WhatsAppSticky.jsx', // Version originale avec probl√®mes
  'WHATSAPP_TROUBLESHOOTING.md'
];

// Fichiers √† renommer
const filesToRename = [
  {
    from: 'src/components/WhatsAppStickyV2.jsx',
    to: 'src/components/WhatsAppSticky.jsx'
  }
];

// Supprimer les fichiers de test
filesToRemove.forEach(file => {
  const filePath = path.join(__dirname, '..', file);
  if (fs.existsSync(filePath)) {
    fs.unlinkSync(filePath);
    console.log(`‚úÖ Supprim√©: ${file}`);
  } else {
    console.log(`‚ö†Ô∏è  Non trouv√©: ${file}`);
  }
});

// Renommer les fichiers
filesToRename.forEach(({ from, to }) => {
  const fromPath = path.join(__dirname, '..', from);
  const toPath = path.join(__dirname, '..', to);
  
  if (fs.existsSync(fromPath)) {
    fs.renameSync(fromPath, toPath);
    console.log(`‚úÖ Renomm√©: ${from} ‚Üí ${to}`);
  } else {
    console.log(`‚ö†Ô∏è  Non trouv√©: ${from}`);
  }
});

// Mettre √† jour App.jsx pour utiliser le bon composant
const appJsxPath = path.join(__dirname, '..', 'src', 'App.jsx');
if (fs.existsSync(appJsxPath)) {
  let content = fs.readFileSync(appJsxPath, 'utf8');
  
  // Remplacer les imports
  content = content.replace(
    /import WhatsAppStickyV2 from '\.\/components\/WhatsAppStickyV2'/g,
    "import WhatsAppSticky from './components/WhatsAppSticky'"
  );
  content = content.replace(
    /import WhatsAppTest from '\.\/components\/WhatsAppTest'/g,
    ""
  );
  
  // Remplacer l'utilisation
  content = content.replace(
    /<WhatsAppStickyV2 \/>/g,
    "<WhatsAppSticky />"
  );
  content = content.replace(
    /<WhatsAppTest \/>/g,
    ""
  );
  
  fs.writeFileSync(appJsxPath, content);
  console.log('‚úÖ App.jsx mis √† jour');
}

console.log('\nüéâ Nettoyage termin√© !');
console.log('üì± Le bouton WhatsApp sticky est maintenant pr√™t pour la production.');
